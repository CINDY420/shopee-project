"use strict";
exports.__esModule = true;
var utils_1 = require("../utils");
var packageName = (0, utils_1.getPackageName)();
/** generate index.ts */
function createIndexStr() {
    return {
        "import": "\n    import { useRequest } from 'ahooks';\n    import { Options, Result } from 'ahooks/lib/useRequest/src/types';\n    ",
        body: "",
        "export": "\n    type IModelUrls = keyof IModels\n    export interface IExtra {\n      /**\n       * request header content-type\uFF0Cdefault is 'application/json'\n       */\n      contentType?:\n        | 'application/json'\n        | 'multipart/form-data'\n        | 'application/x-www-form-urlencoded'\n        | 'text/plain'\n        | 'text/html'\n        | 'application/javascript';\n      /**\n       * The query parameter spliced after the request url, for example, POST request requires splicing token parameter\n       */\n      query?: { [key: string]: any };\n      /**\n       * The user-defined queryString function is processed by JSON.stringify by default, for example {a: 1, b: 2} the result is a=1&b=2\n       */\n      queryStringFn?: (input: any[] | object) => string;\n      /**\n       * The request position type\n       */\n      reqType?: ReqPosType;\n      /**\n       * The special headers\n       */\n      headers?: { [key: string]: string };\n    }\n    /** use aHooks's useRequest to handle response data */\n    function useFetch<I extends IModelUrls>(\n     url: I,\n     req?: null | IModels[I]['Req'],\n     options?: Options<IModels[I]['Res'], IModels[I]['Req']>,\n     extra?: IExtra\n   ): Result<IModels[I]['Res'], [IModels[I]['Req']?, IExtra?]> {\n     async function service(params, extraConfig) {\n       const res = await fetch[url](params, extraConfig || extra);\n       return res;\n     }\n     if (req) {\n       options ? (options.defaultParams = req) : (options = { defaultParams: req });\n     }\n     return useRequest<IModels[I]['Res'], [IModels[I]['Req']?, IExtra?]>(service, options);\n   }\n   export { useRequest, useFetch };\n  "
    };
}
exports["default"] = { createIndexStr: createIndexStr };
