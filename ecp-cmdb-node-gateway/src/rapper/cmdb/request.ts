/* md5: ec09d4ac9f2a43c8dcd4c3e58ea2e6db */
/* Rap repository id: 185 */
/* Rapper version: 2.1.13 */
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

/**
 * This file is automatically generated by Rapper to synchronize the Rap platform interface, please do not modify
 * Rap repository url: http://rap.shopee.io/repository/editor?id=185
 */

import * as commonLib from '@infra/rapper/runtime/commonLib'
import {IReqType} from './extra'

export interface IModels {
  /**
   * Interface name：ping
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=819&itf=4790
   */
  'GET/api/v1/ping': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      /**
       * example string attribute
       */
      string?: string
      /**
       * example number attribute
       */
      number?: number
      /**
       * example boolean attribute
       */
      boolean?: boolean
      /**
       * example regexp attribute
       */
      regexp?: string
      /**
       * example function attribute
       */
      function?: string
      /**
       * example array attribute
       */
      array?: {
        /**
         * example array element attribute
         */
        foo?: number
        /**
         * example array element attribute
         */
        bar?: string
      }[]
      /**
       * example customized array element attribute
       */
      items?: unknown[]
      /**
       * example object attribute
       */
      object?: {
        /**
         * example object attribute
         */
        foo?: number
        /**
         * example object attribute
         */
        bar?: string
      }
      /**
       * example placeholder
       */
      placeholder?: string
    }
  }

  /**
   * Interface name：QueryAZMapping
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=903&itf=5313
   */
  'GET/ecpapi/v2/az/{azKey}/mapping': {
    Req: {
      azKey: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      version?: string
      items?: {
        version?: string
        azKey?: string
      }[]
    }
  }

  /**
   * Interface name：ListAzDetail
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=903&itf=6132
   */
  'GET/ecpapi/v2/azs': {
    Req: {
      env: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        name: string
        env: string
        clusters: string[]
        capability: string[]
        version: string
      }[]
    }
  }

  /**
   * Interface name：HealthCheck
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=904&itf=5314
   */
  'GET/ecpapi/v2/check': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      app?: string
      message?: string
    }
  }

  /**
   * Interface name：QueryClusterDetail
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5315
   */
  'GET/ecpapi/v2/cluster/{uuid}/detail': {
    Req: {
      uuid: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      detail?: {
        meta?: {
          uuid?: string
          clusterKey?: string
          kubeConfig?: string
          azV1?: string
          azV2?: string
          displayName?: string
          region?: string
          segment?: string
          monitoringUrl?: string
          kubeApiserverType?: string
          ecpVersion?: string
          handleByGalio?: boolean
        }
      }
    }
  }

  /**
   * Interface name：AddClusterMeta
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5316
   */
  'POST/ecpapi/v2/clustermeta': {
    Req: {
      uuid?: string
      clusterKey?: string
      displayName?: string
      kubeConfig?: string
      azV1?: string
      azV2?: string
      monitoringUrl?: string
      kubeApiserverType?: string
      ecpVersion?: string
      handleByGalio?: boolean
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：ListNodes
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5317
   */
  'GET/ecpapi/v2/clusters/{clusterName}/nodes': {
    Req: {
      clusterName: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items?: {
        cluster?: string
        metrics?: {
          pods?: {
            applied?: number
            used?: number
          }
          cpu?: {
            applied?: number
            used?: number
          }
          mem?: {
            applied?: number
            used?: number
          }
        }
        extraStatus?: unknown[]
        labels?: {}
        taints?: {
          key?: string
          val?: string
          effect?: string
        }[]
        nodeName?: string
        ip?: string
        status?: string
        roles?: unknown[]
      }[]
      total?: number
    }
  }

  /**
   * Interface name：CreateDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5318
   */
  'POST/ecpapi/v2/sdus/{sduName}/deployments': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
      sduName?: string
    }
    Res: {
      deployId?: string
    }
  }

  /**
   * Interface name：ListServiceDeployments
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5319
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys': {
    Req: {
      sduName: string
      withdetail?: boolean
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        deployId: string
        env: string
        bundle: string
        sduName: string
        project: string
        componentType: string
        module: string
        feature: string
        cid: string
        azV1: string
        azV2: string
        cluster: string
        summary: {
          cpu: number
          healthyInstances: number
          mem: number
          disk: number
          stagingInstances: number
          unhealthyInstances: number
          killingInstances: number
          runningInstances: number
          startingInstances: number
          targetInstances: number
          unknownInstances: number
          canaryInstances: number
          releaseInstances: number
          state: string
          lastDeployed: number
        }
        clusterType: string
        deployEngine: string
        status: {
          orchestrator: string
          reason: string
          containers: {
            phase: string
            tag: string
            image: string
            name: string
            timestamp: string
          }[]
        }
      }[]
      total: number
    }
  }

  /**
   * Interface name：GetServiceDeploymentMeta
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5320
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/meta': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      deployment: {
        cluster: string
        clusterType: string
        azV1: string
        azV2: string
        deployEngine: string
        componentType: string
        summary: {
          stagingInstances: number
          cpu: number
          unhealthyInstances: number
          releaseInstances: number
          healthyInstances: number
          killingInstances: number
          mem: number
          runningInstances: number
          state: string
          disk: number
          lastDeployed: number
          startingInstances: number
          targetInstances: number
          unknownInstances: number
          canaryInstances: number
        }
        status: {
          containers: {
            name: string
            phase: string
            image: string
            tag: string
          }[]
          reason: string
          orchestrator: string
        }
        bundle: string
        feature: string
        module: string
        deployId: string
        cid: string
        sduName: string
        env: string
        project: string
      }
    }
  }

  /**
   * Interface name：GetDeploymentResult
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5321
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/result': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      status?: {}
      reason?: string
    }
  }

  /**
   * Interface name：DeploymentCancelCanary
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5322
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:cancelcanary': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：DeploymentEditResource
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5323
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:editresource': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：FullReleaseDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5324
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:fullrelease': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：RestartDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5325
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:restart': {
    Req: {
      sduName: string
      deployId: string
      phases: string[]
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：RollbackDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5326
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:rollback': {
    Req: {
      sduName: string
      deployId: string
      deploymentId: string
      containers?: {
        name: string
        image: string
        phase: string
        tag: string
      }[]
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：ScaleDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5327
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:scale': {
    Req: {
      releaseReplicas?: number
      canaryReplicas?: number
      canaryValid?: boolean
      /**
       * scene key
       */
      __scene?: string
      sduName?: string
      deployId?: string
    }
    Res: {}
  }

  /**
   * Interface name：Stop Deployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5328
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:stop': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：SuspendDeployment
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5329
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:suspend': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：ListWorkload
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=6172
   */
  'GET/ecpapi/v2/workloads': {
    Req: {
      env: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        env: string
        az: string
        workloads: {
          name: string
          nameDisplay: string
          type: string
          category: string
          orchestrators: string[]
        }[]
      }[]
    }
  }

  /**
   * Interface name：GetDeploymentHistory
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=7374
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_history': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      list: {
        containers: {
          name: string
          image: string
          phase: string
          tag: string
          timestamp: string
        }[]
        deploymentId: string
        state: string
        lastDeployed: number
      }[]
    }
  }

  /**
   * Interface name：GetDeploymentPreview
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=7396
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_preview': {
    Req: {
      sduName: string
      deployId: string
      deploymentId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      old: {
        az: string
        tag: string
        totalInstances: number
      }
      new: {
        az: string
        tag: string
        totalInstances: number
      }
    }
  }

  /**
   * Interface name：GetDeploymentEvents
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=10560
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/events': {
    Req: {
      sduName: string
      deployId: string
      pageCount?: number
      pageNum?: number
      startTime?: number
      endTime?: number
      filter?: string
      order?: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      events: {
        name: string
        namespace: string
        kind: string
        reason: string
        message: string
        hostIp: string
        podIp: string
        createTime: string
      }[]
      kindList: string[]
      total: number
    }
  }

  /**
   * Interface name：bulk get deployments
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=11358
   */
  'POST/ecpapi/v2/services/{serviceName}/bulk_get_deployments': {
    Req: {
      serviceName: string
      sdus: string[]
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        deployId: string
        sduName: string
        project: string
        module: string
        env: string
        cid: string
        feature: string
        bundle: string
        azV1: string
        azV2: string
        cluster: string
        clusterType: string
        deployEngine: string
        componentType: string
        summary: {
          sduName: string
          cpu: number
          mem: number
          disk: number
          healthyInstances: number
          killingInstances: number
          runningInstances: number
          stagingInstances: number
          startingInstances: number
          targetInstances: number
          unhealthyInstances: number
          unknownInstances: number
          releaseInstances: number
          canaryInstances: number
          state: string
          lastDeployed: number
        }
        status: {
          reason: string
          orchestrator: string
          containers: {
            name: string
            image: string
            phase: string
            tag: string
            timestamp: string
          }[]
        }
      }[]
      total: number
    }
  }

  /**
   * Interface name：ListSDUHpasRequest
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=907&itf=5330
   */
  'GET/ecpapi/v2/sdus/{sduName}/hpas': {
    Req: {
      sduName: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        id: number
        meta: {
          sdu: string
          az: string
        }
        spec: {
          autoscalingLogic: string
          behavior: {
            scaleUp: {
              stabilizationWindowSeconds: number
              notifyFailed: boolean
              selected: boolean
            }
            scaleDown: {
              notifyFailed: boolean
              selected: boolean
              stabilizationWindowSeconds: number
            }
          }
          notifyChannel: string
          triggerRules: {
            cronRule: {
              repeatType: {}
              endWeekday: {}
              startTime: string
              startWeekday: {}
              endTime: string
              targetCount: number
            }
            type: string
            autoscalingRule: {
              metrics: string
              threshold: number
            }
          }[]
          minReplicaCount: number
          maxReplicaCount: number
          updatedTime: string
          status: number
          updator: string
        }
      }[]
      total: number
    }
  }

  /**
   * Interface name：GetSDUSummary
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=5331
   */
  'GET/ecpapi/v2/sdus/{sduName}/summary': {
    Req: {
      sduName: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      summary: {
        cpu: number
        mem: number
        healthyInstances: number
        startingInstances: number
        targetInstances: number
        disk: number
        state: string
        killingInstances: number
        lastDeployed: number
        runningInstances: number
        stagingInstances: number
        unhealthyInstances: number
        releaseInstances: number
        canaryInstances: number
        unknownInstances: number
      }
    }
  }

  /**
   * Interface name：ListSDUs
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=5332
   */
  'GET/ecpapi/v2/services/{serviceName}/sdus': {
    Req: {
      serviceName: string
      /**
       * support filter by env、cid, Example: ?filter_by=env==testcid==CN.
       */
      filterBy?: string
      /**
       * keyword to search, support sdu name.
       */
      keyword?: string
      isGroup?: boolean
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        env: string
        cid: string
        sduId: number
        deploymentLink: string
        serviceName: string
        identifier: {
          project: string
          module: string
        }
        sdu: string
        serviceId: number
        resourceType: string
        idcs: unknown[]
        version: string
      }[]
      totalSize: number
    }
  }

  /**
   * Interface name：bulk get sdus
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=11357
   */
  'GET/ecpapi/v2/services/{serviceName}/bulk_get_sdus': {
    Req: {
      serviceName: string
      filterBy?: string
      keyword?: string
      isGroup?: boolean
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        sduId: number
        serviceId: number
        sdu: string
        resourceType: string
        env: string
        cid: string
        idcs: string[]
        version: string
        deploymentLink: string
        identifier: {
          project: string
          module: string
        }
        serviceName: string
        summary: {
          sduName: string
          cpu: number
          mem: number
          disk: number
          healthyInstances: number
          killingInstances: number
          runningInstances: number
          stagingInstances: number
          startingInstances: number
          targetInstances: number
          unhealthyInstances: number
          unknownInstances: number
          releaseInstances: number
          canaryInstances: number
          state: string
          lastDeployed: number
        }
      }[]
      totalSize: number
    }
  }

  /**
   * Interface name：ListDeloymentPods
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5333
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods': {
    Req: {
      sduName: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        nodeName: string
        clusterName: string
        podName: string
        podIp: string
        namespace: string
        createdTime: number
        cid: string
        sdu: string
        env: string
        lastRestartTime: number
        status: string
        phase: string
        restartCount: number
        tag: string
        nodeIp: string
        podPort: number
        idc: string
        containerInfo: {
          containerId: string
          contianerName: string
          containerName: string
        }[]
        podStatus: {
          containerStatuses: {
            name: string
            containerId: string
            image: string
            imageId: string
            ready: boolean
            state: {
              terminated: {
                exitCode: number
                signal: number
                reason: string
                message: string
                containerId: string
              }
            }
            lastState: {
              terminated: {
                exitCode: number
                signal: number
                reason: string
                message: string
                containerId: string
              }
            }
          }[]
        }
      }[]
      total: number
    }
  }

  /**
   * Interface name：Kill Pod
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5334
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}:kill': {
    Req: {
      sduName: string
      deployId: string
      podName: string
      clusterName: string
      namespace: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {}
  }

  /**
   * Interface name：GetPodsMetrics
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5335
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/metrics': {
    Req: {
      deployId: string
      pods: {
        podName: string
        namespace: string
      }[]
      sduName: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        podName: string
        cpu: {
          applied: number
          used: number
        }
        namespace: string
        memory: {
          used: number
          applied: number
        }
      }[]
    }
  }

  /**
   * Interface name：ListPodLogFiles
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10561
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/files': {
    Req: {
      sduName: string
      podName: string
      hostIp: string
      deployId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      files: {
        gid: string
        groupName: string
        isDir: boolean
        modTime: string
        mod: number
        modStr: string
        name: string
        path: string
        size: string
        uid: number
        userName: string
      }[]
    }
  }

  /**
   * Interface name：GetLogFileContent
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10562
   */
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/file:read': {
    Req: {
      sduName: string
      podName: string
      hostIp: string
      offset: number
      path: string
      length: number
      deployId: string
      /**
       * scene key
       */
      __scene?: string
      read?: string
    }
    Res: {
      fileContent: string
    }
  }

  /**
   * Interface name：GetPodLogs
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10672
   */
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/logs': {
    Req: {
      sduName: string
      deployId: string
      podName: string
      isPrevious?: boolean
      namespace?: string
      cluster?: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      data: string
    }
  }

  /**
   * Interface name：ListAllZones
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1200&itf=7358
   */
  'GET/ecpapi/v2/service/{serviceName}/deployzones': {
    Req: {
      serviceName: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      items: {
        zoneName: string
        az: string
        description: string
      }[]
      totalSize: number
    }
  }

  /**
   * Interface name：GetPVPVC
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11421
   */
  'GET/ecpapi/v2/pvpvc/{uuid}': {
    Req: {
      uuid: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      id: string
      uuid: string
      name: string
      serviceId: string
      serviceName: string
      project: string
      module: string
      env: string
      cid: string
      az: string
      secret: string
      accessMode: string
      subpath: string
      status: string
      updatedAt: string
    }
  }

  /**
   * Interface name：CreatePvPvc
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11422
   */
  'POST/ecpapi/v2/pvpvcs': {
    Req: {
      name: string
      serviceId: string
      serviceName: string
      project: string
      module: string
      env: string
      cid: string
      az: string
      secret: string
      accessMode: string
      subpath: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }

  /**
   * Interface name：ListPVPVC
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11423
   */
  'GET/ecpapi/v2/pvpvcs/{serviceId}': {
    Req: {
      serviceId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      pvPvc: {
        id: string
        uuid: string
        name: string
        serviceId: string
        serviceName: string
        project: string
        module: string
        env: string
        cid: string
        az: string
        secret: string
        accessMode: string
        subpath: string
        status: string
        updatedAt: string
      }[]
    }
  }

  /**
   * Interface name：DeletePVPVC
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11424
   */
  'DELETE/ecpapi/v2/pvpvc/{uuid}': {
    Req: {
      uuid: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }

  /**
   * Interface name：CreatePVSecret
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11425
   */
  'POST/ecpapi/v2/pvsecret': {
    Req: {
      name: string
      serviceId: string
      serviceName: string
      project: string
      module: string
      env: string
      az: string
      ussAppid: string
      ussAppSecret: string
      intranetDomain: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }

  /**
   * Interface name：UpdatePVSecret
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11427
   */
  'PUT/ecpapi/v2/pvsecret': {
    Req: {
      uuid: string
      serviceId: string
      serviceName: string
      name: string
      project: string
      module: string
      env: string
      az: string
      ussAppid: string
      ussAppSecret: string
      intranetDomain: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }

  /**
   * Interface name：GetPVSecret
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11428
   */
  'GET/ecpapi/v2/pvsecret/{uuid}': {
    Req: {
      uuid: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      id: string
      serviceId: string
      serviceName: string
      uuid: string
      name: string
      project: string
      module: string
      env: string
      az: string
      ussAppid: string
      ussAppSecret: string
      intranetDomain: string
      updatedAt: string
    }
  }

  /**
   * Interface name：DeletePVSecret
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11429
   */
  'DELETE/ecpapi/v2/pvsecret/{uuid}': {
    Req: {
      uuid: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }

  /**
   * Interface name：ListPVSecret
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11430
   */
  'GET/ecpapi/v2/pvsecrets/{serviceId}': {
    Req: {
      serviceId: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      pvSecret: {
        id: string
        serviceId: string
        serviceName: string
        uuid: string
        name: string
        project: string
        module: string
        env: string
        az: string
        ussAppid: string
        ussAppSecret: string
        intranetDomain: string
        updatedAt: string
      }[]
    }
  }

  /**
   * Interface name：IsPVSecretExist
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11442
   */
  'POST/ecpapi/v2/pvsecret/isexist': {
    Req: {
      serviceId: string
      ussAppid: string
      env: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      exist: boolean
    }
  }

  /**
   * Interface name：RetryCreatePVPVC
   * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11765
   */
  'POST/ecpapi/v2/pvpvc': {
    Req: {
      uuid: string
      name: string
      serviceId: string
      serviceName: string
      project: string
      module: string
      env: string
      cid: string
      az: string
      secret: string
      accessMode: string
      subpath: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      uuid: string
    }
  }
}

type ResSelector<T> = T

export interface IResponseTypes {
  'GET/api/v1/ping': ResSelector<IModels['GET/api/v1/ping']['Res']>
  'GET/ecpapi/v2/az/{azKey}/mapping': ResSelector<IModels['GET/ecpapi/v2/az/{azKey}/mapping']['Res']>
  'GET/ecpapi/v2/azs': ResSelector<IModels['GET/ecpapi/v2/azs']['Res']>
  'GET/ecpapi/v2/check': ResSelector<IModels['GET/ecpapi/v2/check']['Res']>
  'GET/ecpapi/v2/cluster/{uuid}/detail': ResSelector<IModels['GET/ecpapi/v2/cluster/{uuid}/detail']['Res']>
  'POST/ecpapi/v2/clustermeta': ResSelector<IModels['POST/ecpapi/v2/clustermeta']['Res']>
  'GET/ecpapi/v2/clusters/{clusterName}/nodes': ResSelector<
    IModels['GET/ecpapi/v2/clusters/{clusterName}/nodes']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/deployments': ResSelector<IModels['POST/ecpapi/v2/sdus/{sduName}/deployments']['Res']>
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys': ResSelector<IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys']['Res']>
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/meta': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/meta']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/result': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/result']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:cancelcanary': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:cancelcanary']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:editresource': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:editresource']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:fullrelease': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:fullrelease']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:restart': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:restart']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:rollback': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:rollback']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:scale': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:scale']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:stop': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:stop']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:suspend': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:suspend']['Res']
  >
  'GET/ecpapi/v2/workloads': ResSelector<IModels['GET/ecpapi/v2/workloads']['Res']>
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_history': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_history']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_preview': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_preview']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/events': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/events']['Res']
  >
  'POST/ecpapi/v2/services/{serviceName}/bulk_get_deployments': ResSelector<
    IModels['POST/ecpapi/v2/services/{serviceName}/bulk_get_deployments']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/hpas': ResSelector<IModels['GET/ecpapi/v2/sdus/{sduName}/hpas']['Res']>
  'GET/ecpapi/v2/sdus/{sduName}/summary': ResSelector<IModels['GET/ecpapi/v2/sdus/{sduName}/summary']['Res']>
  'GET/ecpapi/v2/services/{serviceName}/sdus': ResSelector<IModels['GET/ecpapi/v2/services/{serviceName}/sdus']['Res']>
  'GET/ecpapi/v2/services/{serviceName}/bulk_get_sdus': ResSelector<
    IModels['GET/ecpapi/v2/services/{serviceName}/bulk_get_sdus']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}:kill': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}:kill']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/metrics': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/metrics']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/files': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/files']['Res']
  >
  'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/file:read': ResSelector<
    IModels['POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/file:read']['Res']
  >
  'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/logs': ResSelector<
    IModels['GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/logs']['Res']
  >
  'GET/ecpapi/v2/service/{serviceName}/deployzones': ResSelector<
    IModels['GET/ecpapi/v2/service/{serviceName}/deployzones']['Res']
  >
  'GET/ecpapi/v2/pvpvc/{uuid}': ResSelector<IModels['GET/ecpapi/v2/pvpvc/{uuid}']['Res']>
  'POST/ecpapi/v2/pvpvcs': ResSelector<IModels['POST/ecpapi/v2/pvpvcs']['Res']>
  'GET/ecpapi/v2/pvpvcs/{serviceId}': ResSelector<IModels['GET/ecpapi/v2/pvpvcs/{serviceId}']['Res']>
  'DELETE/ecpapi/v2/pvpvc/{uuid}': ResSelector<IModels['DELETE/ecpapi/v2/pvpvc/{uuid}']['Res']>
  'POST/ecpapi/v2/pvsecret': ResSelector<IModels['POST/ecpapi/v2/pvsecret']['Res']>
  'PUT/ecpapi/v2/pvsecret': ResSelector<IModels['PUT/ecpapi/v2/pvsecret']['Res']>
  'GET/ecpapi/v2/pvsecret/{uuid}': ResSelector<IModels['GET/ecpapi/v2/pvsecret/{uuid}']['Res']>
  'DELETE/ecpapi/v2/pvsecret/{uuid}': ResSelector<IModels['DELETE/ecpapi/v2/pvsecret/{uuid}']['Res']>
  'GET/ecpapi/v2/pvsecrets/{serviceId}': ResSelector<IModels['GET/ecpapi/v2/pvsecrets/{serviceId}']['Res']>
  'POST/ecpapi/v2/pvsecret/isexist': ResSelector<IModels['POST/ecpapi/v2/pvsecret/isexist']['Res']>
  'POST/ecpapi/v2/pvpvc': ResSelector<IModels['POST/ecpapi/v2/pvpvc']['Res']>
}

type RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD'

export function createFetch(fetchConfig: commonLib.RequesterOption, extraConfig?: {fetchType?: commonLib.FetchType}) {
  if (!extraConfig || !extraConfig.fetchType) {
    console.warn(
      'Rapper Warning: createFetch API will be deprecated, if you want to customize fetch, please use overrideFetch instead, since new API guarantees better type consistency during frontend lifespan. See detail https://www.yuque.com/rap/rapper/overridefetch'
    )
  }
  const rapperFetch = commonLib.getRapperRequest(fetchConfig)

  function fetchMethod<T extends keyof IModels>(name: T) {
    type Method = T extends `${infer U}/${string}` ? U : never
    type URL = T extends `${RequestMethod}${infer U}` ? U : never
    const idx = name.indexOf('/')
    const method: Method = name.substring(0, idx)
    const url: URL = name.substring(idx)

    return (req?: IModels[T]['Req'], extra?: commonLib.IExtra) => {
      extra = extra || {}
      extra.reqType = {...(extra.reqType || {}), ...IReqType[name]}
      return rapperFetch({
        url,
        method,
        params: req,
        extra,
      }) as Promise<IResponseTypes[T]>
    }
  }

  return {
    /**
     * Interface name：ping
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=819&itf=4790
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/api/v1/ping': fetchMethod('GET/api/v1/ping'),

    /**
     * Interface name：QueryAZMapping
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=903&itf=5313
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/az/{azKey}/mapping': fetchMethod('GET/ecpapi/v2/az/{azKey}/mapping'),

    /**
     * Interface name：ListAzDetail
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=903&itf=6132
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/azs': fetchMethod('GET/ecpapi/v2/azs'),

    /**
     * Interface name：HealthCheck
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=904&itf=5314
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/check': fetchMethod('GET/ecpapi/v2/check'),

    /**
     * Interface name：QueryClusterDetail
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5315
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/cluster/{uuid}/detail': fetchMethod('GET/ecpapi/v2/cluster/{uuid}/detail'),

    /**
     * Interface name：AddClusterMeta
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5316
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/clustermeta': fetchMethod('POST/ecpapi/v2/clustermeta'),

    /**
     * Interface name：ListNodes
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=905&itf=5317
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/clusters/{clusterName}/nodes': fetchMethod('GET/ecpapi/v2/clusters/{clusterName}/nodes'),

    /**
     * Interface name：CreateDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5318
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/deployments': fetchMethod('POST/ecpapi/v2/sdus/{sduName}/deployments'),

    /**
     * Interface name：ListServiceDeployments
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5319
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys': fetchMethod('GET/ecpapi/v2/sdus/{sduName}/svcdeploys'),

    /**
     * Interface name：GetServiceDeploymentMeta
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5320
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/meta': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/meta'
    ),

    /**
     * Interface name：GetDeploymentResult
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5321
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/result': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/result'
    ),

    /**
     * Interface name：DeploymentCancelCanary
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5322
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:cancelcanary': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:cancelcanary'
    ),

    /**
     * Interface name：DeploymentEditResource
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5323
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:editresource': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:editresource'
    ),

    /**
     * Interface name：FullReleaseDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5324
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:fullrelease': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:fullrelease'
    ),

    /**
     * Interface name：RestartDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5325
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:restart': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:restart'
    ),

    /**
     * Interface name：RollbackDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5326
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:rollback': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:rollback'
    ),

    /**
     * Interface name：ScaleDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5327
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:scale': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:scale'
    ),

    /**
     * Interface name：Stop Deployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5328
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:stop': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:stop'
    ),

    /**
     * Interface name：SuspendDeployment
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=5329
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:suspend': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}:suspend'
    ),

    /**
     * Interface name：ListWorkload
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=6172
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/workloads': fetchMethod('GET/ecpapi/v2/workloads'),

    /**
     * Interface name：GetDeploymentHistory
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=7374
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_history': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_history'
    ),

    /**
     * Interface name：GetDeploymentPreview
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=7396
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_preview': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/deploy_preview'
    ),

    /**
     * Interface name：GetDeploymentEvents
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=10560
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/events': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/events'
    ),

    /**
     * Interface name：bulk get deployments
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=906&itf=11358
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/services/{serviceName}/bulk_get_deployments': fetchMethod(
      'POST/ecpapi/v2/services/{serviceName}/bulk_get_deployments'
    ),

    /**
     * Interface name：ListSDUHpasRequest
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=907&itf=5330
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/hpas': fetchMethod('GET/ecpapi/v2/sdus/{sduName}/hpas'),

    /**
     * Interface name：GetSDUSummary
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=5331
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/summary': fetchMethod('GET/ecpapi/v2/sdus/{sduName}/summary'),

    /**
     * Interface name：ListSDUs
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=5332
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/services/{serviceName}/sdus': fetchMethod('GET/ecpapi/v2/services/{serviceName}/sdus'),

    /**
     * Interface name：bulk get sdus
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=908&itf=11357
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/services/{serviceName}/bulk_get_sdus': fetchMethod(
      'GET/ecpapi/v2/services/{serviceName}/bulk_get_sdus'
    ),

    /**
     * Interface name：ListDeloymentPods
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5333
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods'
    ),

    /**
     * Interface name：Kill Pod
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5334
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}:kill': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}:kill'
    ),

    /**
     * Interface name：GetPodsMetrics
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=5335
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/metrics': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/metrics'
    ),

    /**
     * Interface name：ListPodLogFiles
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10561
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/files': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/files'
    ),

    /**
     * Interface name：GetLogFileContent
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10562
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/file:read': fetchMethod(
      'POST/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/file:read'
    ),

    /**
     * Interface name：GetPodLogs
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=909&itf=10672
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/logs': fetchMethod(
      'GET/ecpapi/v2/sdus/{sduName}/svcdeploys/{deployId}/pods/{podName}/logs'
    ),

    /**
     * Interface name：ListAllZones
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1200&itf=7358
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/service/{serviceName}/deployzones': fetchMethod('GET/ecpapi/v2/service/{serviceName}/deployzones'),

    /**
     * Interface name：GetPVPVC
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11421
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/pvpvc/{uuid}': fetchMethod('GET/ecpapi/v2/pvpvc/{uuid}'),

    /**
     * Interface name：CreatePvPvc
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11422
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/pvpvcs': fetchMethod('POST/ecpapi/v2/pvpvcs'),

    /**
     * Interface name：ListPVPVC
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11423
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/pvpvcs/{serviceId}': fetchMethod('GET/ecpapi/v2/pvpvcs/{serviceId}'),

    /**
     * Interface name：DeletePVPVC
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11424
     * @param req request parameters
     * @param extra request config parameters
     */
    'DELETE/ecpapi/v2/pvpvc/{uuid}': fetchMethod('DELETE/ecpapi/v2/pvpvc/{uuid}'),

    /**
     * Interface name：CreatePVSecret
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11425
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/pvsecret': fetchMethod('POST/ecpapi/v2/pvsecret'),

    /**
     * Interface name：UpdatePVSecret
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11427
     * @param req request parameters
     * @param extra request config parameters
     */
    'PUT/ecpapi/v2/pvsecret': fetchMethod('PUT/ecpapi/v2/pvsecret'),

    /**
     * Interface name：GetPVSecret
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11428
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/pvsecret/{uuid}': fetchMethod('GET/ecpapi/v2/pvsecret/{uuid}'),

    /**
     * Interface name：DeletePVSecret
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11429
     * @param req request parameters
     * @param extra request config parameters
     */
    'DELETE/ecpapi/v2/pvsecret/{uuid}': fetchMethod('DELETE/ecpapi/v2/pvsecret/{uuid}'),

    /**
     * Interface name：ListPVSecret
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11430
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/ecpapi/v2/pvsecrets/{serviceId}': fetchMethod('GET/ecpapi/v2/pvsecrets/{serviceId}'),

    /**
     * Interface name：IsPVSecretExist
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11442
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/pvsecret/isexist': fetchMethod('POST/ecpapi/v2/pvsecret/isexist'),

    /**
     * Interface name：RetryCreatePVPVC
     * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=1847&itf=11765
     * @param req request parameters
     * @param extra request config parameters
     */
    'POST/ecpapi/v2/pvpvc': fetchMethod('POST/ecpapi/v2/pvpvc'),
  }
}
