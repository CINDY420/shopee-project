/* md5: 083d9b43c2656a8036fc7d025d6f1a78 */
/* Rap repository id: 185 */
/* Rapper version: 2.1.13 */
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

/**
 * This file is automatically generated by Rapper to synchronize the Rap platform interface, please do not modify
 * Rap repository url: http://rap.shopee.io/repository/editor?id=185
 */

/**
 * Interface nameï¼šListSDUHpasRequest
 * Rap url: http://rap.shopee.io/repository/editor?id=185&mod=907&itf=5330
 */

import {IsNotEmpty, IsString, ValidateNested, IsArray, IsNumber, IsBoolean} from 'class-validator'
import {Type} from 'class-transformer'
import {ItemEmpty} from '.'

export class Item99552 {
  @IsNotEmpty()
  @IsBoolean()
  'notifyFailed': boolean

  @IsNotEmpty()
  @IsBoolean()
  'selected': boolean

  @IsNotEmpty()
  @IsNumber()
  'stabilizationWindowSeconds': number
}

export class Item99551 {
  @IsNotEmpty()
  @IsString()
  'metrics': string

  @IsNotEmpty()
  @IsNumber()
  'threshold': number
}

export class Item99549 {
  @IsNotEmpty()
  @IsString()
  'endTime': string

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => ItemEmpty)
  'endWeekday': ItemEmpty

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => ItemEmpty)
  'repeatType': ItemEmpty

  @IsNotEmpty()
  @IsString()
  'startTime': string

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => ItemEmpty)
  'startWeekday': ItemEmpty

  @IsNotEmpty()
  @IsNumber()
  'targetCount': number
}

export class Item99543 {
  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99551)
  'autoscalingRule': Item99551

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99549)
  'cronRule': Item99549

  @IsNotEmpty()
  @IsString()
  'type': string
}

export class Item99541 {
  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99552)
  'scaleDown': Item99552

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99552)
  'scaleUp': Item99552
}

export class Item99537 {
  @IsNotEmpty()
  @IsString()
  'autoscalingLogic': string

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99541)
  'behavior': Item99541

  @IsNotEmpty()
  @IsNumber()
  'maxReplicaCount': number

  @IsNotEmpty()
  @IsNumber()
  'minReplicaCount': number

  @IsNotEmpty()
  @IsString()
  'notifyChannel': string

  @IsNotEmpty()
  @IsNumber()
  'status': number

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99543)
  @IsArray()
  'triggerRules': Item99543[]

  @IsNotEmpty()
  @IsString()
  'updatedTime': string

  @IsNotEmpty()
  @IsString()
  'updator': string
}

export class Item99535 {
  @IsNotEmpty()
  @IsString()
  'az': string

  @IsNotEmpty()
  @IsString()
  'sdu': string
}

export class Item99533 {
  @IsNotEmpty()
  @IsNumber()
  'id': number

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99535)
  'meta': Item99535

  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99537)
  'spec': Item99537
}

export class GetEcpapiV2Sdus1SduNameHpasReqDto {
  @IsNotEmpty()
  @IsString()
  'sduName': string
}
export class GetEcpapiV2Sdus1SduNameHpasResDto {
  @IsNotEmpty()
  @ValidateNested()
  @Type(() => Item99533)
  @IsArray()
  'items': Item99533[]

  @IsNotEmpty()
  @IsNumber()
  'total': number
}
