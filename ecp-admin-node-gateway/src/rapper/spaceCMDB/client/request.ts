/* md5: a49c807c56621becb120dd0df8202e68 */
/* Rap repository id: 247 */
/* Rapper version: 2.1.14 */
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

/**
 * This file is automatically generated by Rapper to synchronize the Rap platform interface, please do not modify
 * Rap repository url: https://rap.shopee.io/repository/editor?id=247
 */

import * as commonLib from '@infra/rapper/runtime/commonLib'
import {IReqType} from './extra'

export interface IModels {
  /**
   * Interface name：Get Tenants
   * Rap url: https://rap.shopee.io/repository/editor?id=247&mod=1376&itf=8643
   */
  'GET/apis/cmdb/v2/service/tenant/get': {
    Req: {
      show_details?: boolean
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      tenants: {
        tenant_name: string
        tenant_id: number
        engineering_managers?: {
          user_id: number
          user_email: string
          team_ids: number[]
        }[]
      }[]
      business_code: number
      success: boolean
    }
  }
}

type ResSelector<T> = T

export interface IResponseTypes {
  'GET/apis/cmdb/v2/service/tenant/get': ResSelector<IModels['GET/apis/cmdb/v2/service/tenant/get']['Res']>
}

type RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD'

export function createFetch(fetchConfig: commonLib.RequesterOption, extraConfig?: {fetchType?: commonLib.FetchType}) {
  if (!extraConfig || !extraConfig.fetchType) {
    console.warn(
      'Rapper Warning: createFetch API will be deprecated, if you want to customize fetch, please use overrideFetch instead, since new API guarantees better type consistency during frontend lifespan. See detail https://www.yuque.com/rap/rapper/overridefetch'
    )
  }
  const rapperFetch = commonLib.getRapperRequest(fetchConfig)

  function fetchMethod<T extends keyof IModels>(name: T) {
    type Method = T extends `${infer U}/${string}` ? U : never
    type URL = T extends `${RequestMethod}${infer U}` ? U : never
    const idx = name.indexOf('/')
    const method: Method = name.substring(0, idx)
    const url: URL = name.substring(idx)

    return (req?: IModels[T]['Req'], extra?: commonLib.IExtra) => {
      extra = extra || {}
      extra.reqType = {...(extra.reqType || {}), ...IReqType[name]}
      return rapperFetch({
        url,
        method,
        params: req,
        extra,
      }) as Promise<IResponseTypes[T]>
    }
  }

  return {
    /**
     * Interface name：Get Tenants
     * Rap url: https://rap.shopee.io/repository/editor?id=247&mod=1376&itf=8643
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/apis/cmdb/v2/service/tenant/get': fetchMethod('GET/apis/cmdb/v2/service/tenant/get'),
  }
}
