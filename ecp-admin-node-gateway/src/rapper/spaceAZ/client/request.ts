/* md5: d44818f3e5749a6e11720132c29e62d9 */
/* Rap repository id: 228 */
/* Rapper version: 2.1.14 */
/* eslint-disable */
/* tslint:disable */
// @ts-nocheck

/**
 * This file is automatically generated by Rapper to synchronize the Rap platform interface, please do not modify
 * Rap repository url: https://rap.shopee.io/repository/editor?id=228
 */

import * as commonLib from '@infra/rapper/runtime/commonLib'
import {IReqType} from './extra'

export interface IModels {
  /**
   * Interface name：Get ENV list
   * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1395&itf=8805
   */
  'GET/apis/envs/v2/env/list': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      version: string
      success: boolean
      result: {
        name: string
        alias_name: string
        enum_value: number
      }[]
    }
  }

  /**
   * Interface name：Get CID list
   * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1395&itf=8806
   */
  'GET/apis/envs/v2/cid/list': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      version: string
      success: boolean
      result: {
        name: string
        alias_name: string
        enum_value: number
        visible: boolean
      }[]
    }
  }

  /**
   * Interface name：azs
   * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1022&itf=6135
   */
  'GET/apis/az_meta/v1/az/query_azs': {
    Req: {
      az_key?: string
      az_enum_value?: number
      region_key?: string
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      version?: string
      success?: boolean
      result: {
        az_key: string
        az_name: string
        az_enum_value?: number
        compliance_type?: string
        statefulness?: string
        status?: string
        labels: {}
        region: {
          region_key?: string
          region_name?: string
          region_loc?: {
            region_loc_key?: string
            region_loc_name?: string
            region_area?: {
              region_area_key?: string
              region_area_name?: string
            }
          }
        }
        data_centers?: unknown[]
        segments: {
          segment_key: string
          segment_name: string
        }[]
        pod_groups: unknown[]
      }[]
    }
  }

  /**
   * Interface name：listAllAZv1s
   * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1022&itf=11860
   */
  'GET/apis/envs/v2/az/list_names': {
    Req: {
      /**
       * scene key
       */
      __scene?: string
    }
    Res: {
      version: string
      success: boolean
      result: {
        azs: string[]
      }
    }
  }
}

type ResSelector<T> = T

export interface IResponseTypes {
  'GET/apis/envs/v2/env/list': ResSelector<IModels['GET/apis/envs/v2/env/list']['Res']>
  'GET/apis/envs/v2/cid/list': ResSelector<IModels['GET/apis/envs/v2/cid/list']['Res']>
  'GET/apis/az_meta/v1/az/query_azs': ResSelector<IModels['GET/apis/az_meta/v1/az/query_azs']['Res']>
  'GET/apis/envs/v2/az/list_names': ResSelector<IModels['GET/apis/envs/v2/az/list_names']['Res']>
}

type RequestMethod = 'GET' | 'POST' | 'PUT' | 'DELETE' | 'OPTIONS' | 'PATCH' | 'HEAD'

export function createFetch(fetchConfig: commonLib.RequesterOption, extraConfig?: {fetchType?: commonLib.FetchType}) {
  if (!extraConfig || !extraConfig.fetchType) {
    console.warn(
      'Rapper Warning: createFetch API will be deprecated, if you want to customize fetch, please use overrideFetch instead, since new API guarantees better type consistency during frontend lifespan. See detail https://www.yuque.com/rap/rapper/overridefetch'
    )
  }
  const rapperFetch = commonLib.getRapperRequest(fetchConfig)

  function fetchMethod<T extends keyof IModels>(name: T) {
    type Method = T extends `${infer U}/${string}` ? U : never
    type URL = T extends `${RequestMethod}${infer U}` ? U : never
    const idx = name.indexOf('/')
    const method: Method = name.substring(0, idx)
    const url: URL = name.substring(idx)

    return (req?: IModels[T]['Req'], extra?: commonLib.IExtra) => {
      extra = extra || {}
      extra.reqType = {...(extra.reqType || {}), ...IReqType[name]}
      return rapperFetch({
        url,
        method,
        params: req,
        extra,
      }) as Promise<IResponseTypes[T]>
    }
  }

  return {
    /**
     * Interface name：Get ENV list
     * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1395&itf=8805
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/apis/envs/v2/env/list': fetchMethod('GET/apis/envs/v2/env/list'),

    /**
     * Interface name：Get CID list
     * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1395&itf=8806
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/apis/envs/v2/cid/list': fetchMethod('GET/apis/envs/v2/cid/list'),

    /**
     * Interface name：azs
     * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1022&itf=6135
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/apis/az_meta/v1/az/query_azs': fetchMethod('GET/apis/az_meta/v1/az/query_azs'),

    /**
     * Interface name：listAllAZv1s
     * Rap url: https://rap.shopee.io/repository/editor?id=228&mod=1022&itf=11860
     * @param req request parameters
     * @param extra request config parameters
     */
    'GET/apis/envs/v2/az/list_names': fetchMethod('GET/apis/envs/v2/az/list_names'),
  }
}
